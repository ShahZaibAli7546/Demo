@model Demo.Models.WeekendHalfDaySetup

@{
    ViewData["Title"] = "Edit Weekend & Half Day Setup";
    Layout = "~/Views/Shared/_ControlPanelLayout.cshtml";
    var days = Enum.GetValues(typeof(DayOfWeek)).Cast<DayOfWeek>();
}

<h2 class="text-primary mb-4">✏️ Edit Weekend & Half Day Setup</h2>

<form asp-action="Edit" method="post">
    @Html.HiddenFor(m => m.Id)

    <div class="row mb-3">
        <div class="col-md-4">
            <label asp-for="CampusId" class="form-label"></label>
            <select asp-for="CampusId" asp-items="ViewBag.Campuses" class="form-select"></select>
        </div>
        <div class="col-md-4">
            <label asp-for="StartDate" class="form-label"></label>
            <input asp-for="StartDate" class="form-control" type="date" />
        </div>
        <div class="col-md-4">
            <label asp-for="EndDate" class="form-label"></label>
            <input asp-for="EndDate" class="form-control" type="date" />
        </div>
    </div>

    <div class="mb-3">
        <label class="form-label fw-bold">Weekend Days</label>
        <div class="d-flex flex-wrap gap-2">
            @foreach (var day in days)
            {
                var isChecked = Model.WeekendDays.Contains(day) ? "checked" : "";
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="WeekendDays" value="@day" @isChecked />
                    <label class="form-check-label">@day</label>
                </div>
            }
        </div>
    </div>

    <div class="mb-3">
        <label class="form-label fw-bold">Half Day Weekdays</label>
        <div class="d-flex flex-wrap gap-2">
            @foreach (var day in days)
            {
                var isChecked = Model.HalfDayWeekdays.Contains(day) ? "checked" : "";
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="HalfDayWeekdays" value="@day" @isChecked />
                    <label class="form-check-label">@day</label>
                </div>
            }
        </div>
    </div>

    <div class="batch-group mb-2 d-flex gap-2">
        <select name="SelectedBatchIds" class="form-select batch-select">
            @foreach (var batch in (List<SelectListItem>)ViewBag.Batches)
            {
                <option value="@batch.Value">@batch.Text</option>
            }
        </select>
        <button type="button" class="btn btn-success add-batch">+</button>
    </div>

    <button type="submit" class="btn btn-primary">💾 Update</button>
    <a asp-action="Index" class="btn btn-secondary ms-2">Back</a>
</form>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const container = document.getElementById('batch-container');
            const addBtn = document.getElementById('addBatchBtn');
            const batches = JSON.parse('@Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.Batches))');

            function createBatchSelect() {
                const div = document.createElement('div');
                div.className = "batch-group mb-2 d-flex gap-2";

                const select = document.createElement('select');
                select.name = "SelectedBatchIds";
                select.className = "form-select";

                batches.forEach(batch => {
                    const option = document.createElement('option');
                    option.value = batch.value;
                    option.text = batch.text;
                    select.appendChild(option);
                });

                const removeBtn = document.createElement('button');
                removeBtn.type = "button";
                removeBtn.className = "btn btn-danger remove-batch";
                removeBtn.textContent = "−";

                div.appendChild(select);
                div.appendChild(removeBtn);
                return div;
            }

            container.addEventListener('click', function (e) {
                if (e.target.classList.contains('remove-batch')) {
                    e.target.parentElement.remove();
                }
            });

            addBtn.addEventListener('click', function () {
                container.appendChild(createBatchSelect());
            });
        });
    </script>
}
